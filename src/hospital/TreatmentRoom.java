package hospital;

/**
 *
 * @author Henry Arend
 */
public class TreatmentRoom extends javax.swing.JFrame {

    private Patient patient;
    private boolean isOccupied;
    /**
     * Creates new form TreatmentRoom
     */
    public TreatmentRoom(int xCoord, int yCoord) {
        this.setBounds(xCoord, yCoord, getWidth(), getHeight());
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        status = new javax.swing.JLabel();
        patientNameLabel = new javax.swing.JLabel();
        patientName = new javax.swing.JLabel();
        patientIDNoLabel = new javax.swing.JLabel();
        patientIDNo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        status.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        status.setText("Unoccupied");

        patientNameLabel.setText("Patient Name:");

        patientName.setText("Patient Name");

        patientIDNoLabel.setText("Patiend ID No:");

        patientIDNo.setText("Patient ID No.");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(140, 140, 140)
                        .add(status))
                    .add(layout.createSequentialGroup()
                        .add(91, 91, 91)
                        .add(patientIDNoLabel)
                        .add(18, 18, 18)
                        .add(patientIDNo))
                    .add(layout.createSequentialGroup()
                        .add(94, 94, 94)
                        .add(patientNameLabel)
                        .add(18, 18, 18)
                        .add(patientName)))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(34, 34, 34)
                .add(status)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(patientNameLabel)
                    .add(patientName))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(patientIDNoLabel)
                    .add(patientIDNo))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void setPatient(Patient patient){
        if(patient ==  null){
            throw new NullPointerException("Patient cannot be null.");
        }
        this.patient = patient;
        setOccupied(true);
        isOccupied = true;
        setPatientName();
        setID();
    }
    
    public Patient getPatient(){
        return patient;
    }
    
    public Patient removePatient(){
        Patient temp = patient;
        patient = null;
        setOccupied(false);
        setPatientName();
        setID();
        return temp;
    }
    
    public boolean checkForEmptyRoom(){
        if(!isOccupied){
            return true;
        }
        else{
            return false;
        }
    }
    
    public void setOccupied(boolean isOccupied){
        if(isOccupied){
            status.setText("Occupied");
        }
        else{
            status.setText("Unoccupied");
        }
    }
    
    private void setPatientName(){
        if(patient == null){
            patientName.setText(null);
        }
        else{
            patientName.setText(patient.getName());
        }
    }
    
    private void setID(){
        if(patient == null){
            patientIDNo.setText(null);
        }
        else{
            patientIDNo.setText(patient.getID());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel patientIDNo;
    private javax.swing.JLabel patientIDNoLabel;
    private javax.swing.JLabel patientName;
    private javax.swing.JLabel patientNameLabel;
    private javax.swing.JLabel status;
    // End of variables declaration//GEN-END:variables
}
